#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Инициализировать();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаФормы

&НаКлиенте
Процедура Подключаемый_ПередРазворачиванием(Элемент, Строка, Отказ) Экспорт
	
	НайтиСсылкиПоЗначениюРеквизита(Строка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриАктивизацииЯчейки(Элемент) Экспорт
	
	ПодключитьОбработчикОжидания("ОпределитьУникальныйИдентификатор", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Удалить(Команда)
	
	УдалитьОбъектПоКлючу();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОбмена(Команда)
	
	СменитьРежимУдаленияОбъекта();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РаботаСФормой

#Область Общие

&НаСервере
Процедура Инициализировать()
	
	ИмяСписка = "Список";
	ИмяРеквизита = Параметры.РеквизитыТаблицы[0];
	
	СистемнаяТаблица = Параметры.СистемнаяТаблица;
	ОсновнаяТаблица  = Параметры.ОсновнаяТаблица;
	РеквизитыТаблицы = Параметры.РеквизитыТаблицы; // Массив Из Строка
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Объект.ПутьКФормам = ОбработкаОбъект.Метаданные().ПолноеИмя() + ".Форма.";
	
	Если Параметры.ДинамическийСписок Тогда
		СоздатьДинамическийСписок(ОсновнаяТаблица, РеквизитыТаблицы, СистемнаяТаблица);
	Иначе
		СоздатьДерево(ОсновнаяТаблица, РеквизитыТаблицы, СистемнаяТаблица);
	КонецЕсли;
	
	Элементы.РежимОбмена.Пометка = Ложь;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СообщитьПользователю(Текст)
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = Текст;
	СообщениеПользователю.Сообщить();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область УникальныеИдентификаторы

#Область Общие

&НаКлиенте
Процедура ОпределитьУникальныйИдентификатор()
	
	ТекущиеДанные     = Элементы[ИмяСписка].ТекущиеДанные;
	ТекущаяСтрока     = Элементы[ИмяСписка].ТекущаяСтрока;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТекущегоПоля = ОпределитьИмяТекущегоПоляНаСервере();
	
	ОпределитьУникальныйИдентификаторПоЗначению(ТекущаяСтрока, ТекущиеДанные[ИмяТекущегоПоля]);
	
КонецПроцедуры

#КонецОбласти

#Область Частные

&НаСервере
Процедура ОпределитьУникальныйИдентификаторПоЗначению(СсылкаСтроки, СсылкаЯчейки)
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	
	Если ОбъектОбработки.ЭтоСсылка(ТипЗнч(СсылкаСтроки), Истина) Тогда
		УникальныйИдентификаторСтроки = СсылкаСтроки.УникальныйИдентификатор();
	Иначе
		УникальныйИдентификаторСтроки = "";
	КонецЕсли;
	
	Если ОбъектОбработки.ЭтоСсылка(ТипЗнч(СсылкаЯчейки), Истина) Тогда
		УникальныйИдентификаторЯчейки = СсылкаЯчейки.УникальныйИдентификатор();
	Иначе
		УникальныйИдентификаторЯчейки = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОпределитьИмяТекущегоПоляНаСервере()
	
	ТекущийЭлементПутьКДанным = Элементы[ИмяСписка].ТекущийЭлемент.ПутьКДанным;
	ЧастиПути = СтрРазделить(ТекущийЭлементПутьКДанным, ".");
	
	Возврат ЧастиПути[1];
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область РаботаСоСпискомЭлементов

#Область Общие

&НаКлиенте
Процедура НайтиСсылкиПоЗначениюРеквизита(ТекущаяСтрока)
	
	ТекущиеДанные = ЭтотОбъект[ИмяСписка].НайтиПоИдентификатору(ТекущаяСтрока);
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check use-non-recommended-method
	РаботаСМетаданными = ПолучитьФорму(Объект.ПутьКФормам + "РаботаСМетаданными");
	ДанныеПоСсылкам = РаботаСМетаданными.НайтиСсылкиПоЗначениюРеквизита(ТекущиеДанные[ИмяРеквизита], ОсновнаяТаблица, ИмяРеквизита);
	
	Элементы_Уровень1 = ТекущиеДанные.ПолучитьЭлементы();
	Элементы_Уровень1.Очистить();
	
	Для Каждого Ссылка Из ДанныеПоСсылкам.СсылкиТекущейТаблицы Цикл
		НоваяСтрока = Элементы_Уровень1.Добавить();
		НоваяСтрока[ИмяРеквизита] = Ссылка;
		НоваяСтрока[ИмяРеквизитаТип] = Строка(ТипЗнч(Ссылка));
	КонецЦикла;
	
	Если ДанныеПоСсылкам.СсылкиДругихТаблиц.Количество() > 0 Тогда
		
		НоваяСтрока = Элементы_Уровень1.Добавить();
		НоваяСтрока[ИмяРеквизита] = "Ссылки других объектов";
		НоваяСтрока[ИмяРеквизитаКоличество] = ДанныеПоСсылкам.СсылкиДругихТаблиц.Количество();
		
		Элементы_Уровень2 = НоваяСтрока.ПолучитьЭлементы();
		Для Каждого Ссылка Из ДанныеПоСсылкам.СсылкиДругихТаблиц Цикл
			НоваяСтрока2 = Элементы_Уровень2.Добавить();
			НоваяСтрока2[ИмяРеквизита] = Ссылка;
			НоваяСтрока2[ИмяРеквизитаТип] = Строка(ТипЗнч(Ссылка));
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДерево(ОсновнаяТаблица, РеквизитыТаблицы, СистемнаяТаблица)
	
	МассивРеквизитов = Новый Массив;
	
	Если Не ЗначениеЗаполнено(СистемнаяТаблица) Тогда
		МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяСписка, Новый ОписаниеТипов("ДеревоЗначений")));
	Иначе
		МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяСписка, Новый ОписаниеТипов("ТаблицаЗначений")));
	КонецЕсли;
	
	Для Каждого Реквизит Из РеквизитыТаблицы Цикл
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Реквизит, Новый ОписаниеТипов("Неопределено"), ИмяСписка));
		Если Не ЗначениеЗаполнено(СистемнаяТаблица) Тогда
			ИмяРеквизитаТип = Реквизит + "_Тип";
			МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяРеквизитаТип, Новый ОписаниеТипов("Строка"), ИмяСписка,
				Реквизит + " (Тип)"));
			ИмяРеквизитаКоличество = Реквизит + "_Количество";
			МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяРеквизитаКоличество, Новый ОписаниеТипов("Число",
				Новый КвалификаторыЧисла(15)), ИмяСписка, Реквизит + " (Количество)"));
		КонецЕсли;
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	Элемент = Элементы.Добавить(ИмяСписка, Тип("ТаблицаФормы"), ЭтотОбъект);
	Элемент.ПутьКДанным              = ИмяСписка;
	Элемент.Видимость                = Истина;
	Элемент.ИзменятьСоставСтрок      = Ложь;
	Элемент.ИзменятьПорядокСтрок     = Ложь;
	Элемент.ТолькоПросмотр           = Истина;
	Элемент.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	
	Если Не ЗначениеЗаполнено(СистемнаяТаблица) Тогда
		Элемент.УстановитьДействие("ПередРазворачиванием", "Подключаемый_ПередРазворачиванием");
	КонецЕсли;
	
	Для Каждого Реквизит Из МассивРеквизитов Цикл
		
		Если Реквизит.Имя = ИмяСписка Тогда
			Продолжить;
		КонецЕсли;
		
		Колонка = Элементы.Добавить(ИмяСписка + Реквизит.Имя, Тип("ПолеФормы"), Элементы[ИмяСписка]);
		Колонка.Вид = ВидПоляФормы.ПолеНадписи;
		Колонка.ПутьКДанным = ИмяСписка + "." + Реквизит.Имя;
		
	КонецЦикла;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Запрос = ОбработкаОбъект.ПолучитьЗапросПоПолямОбъекта(ОсновнаяТаблица, РеквизитыТаблицы, Не ЗначениеЗаполнено(СистемнаяТаблица));
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не ЗначениеЗаполнено(СистемнаяТаблица) Тогда
		Элементы_Уровень0 = ЭтотОбъект[ИмяСписка].ПолучитьЭлементы();
	Иначе
		Элементы_Уровень0 = ЭтотОбъект[ИмяСписка];
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		ПустаяСтрока = Истина;
		Для Каждого Реквизит Из РеквизитыТаблицы Цикл
			ПустаяСтрока = ПустаяСтрока И Не ЗначениеЗаполнено(Выборка[Реквизит]);
			Если Не ПустаяСтрока Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ПустаяСтрока Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Элементы_Уровень0.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если СистемнаяТаблица = "ТочкиМаршрута" И Выборка.Ссылка.Вид <> ВидТочкиМаршрутаБизнесПроцесса.Действие Тогда
			
			Если НоваяСтрока.Представление = "<>" Тогда
				Точка = Новый Структура("Ссылка", Выборка.Ссылка.Имя);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Точка);
			КонецЕсли;
			
			Продолжить;
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СистемнаяТаблица) Тогда
			Элементы_Уровень1 = НоваяСтрока.ПолучитьЭлементы();
			НоваяСтрока = Элементы_Уровень1.Добавить();
			НоваяСтрока[РеквизитыТаблицы[0]] = "Расшифровка...";
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДинамическийСписок(ОсновнаяТаблица, РеквизитыТаблицы, СистемнаяТаблица)
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяСписка, Новый ОписаниеТипов("ДинамическийСписок")));
	ИзменитьРеквизиты(МассивРеквизитов);
	
	//@skip-check bsl-legacy-check-string-literal
	ЭтотОбъект["Список"].ОсновнаяТаблица = ОсновнаяТаблица;
	
	Элемент = Элементы.Добавить(ИмяСписка, Тип("ТаблицаФормы"), ЭтотОбъект);
	Элемент.ПутьКДанным              = ИмяСписка;
	Элемент.Видимость                = Истина;
	Элемент.ИзменятьСоставСтрок      = Ложь;
	Элемент.ИзменятьПорядокСтрок     = Ложь;
	Элемент.ТолькоПросмотр           = Истина;
	Элемент.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	Элемент.Отображение              = ОтображениеТаблицы.Список;
	
	Элемент.УстановитьДействие("ПриАктивизацииЯчейки", "Подключаемый_ПриАктивизацииЯчейки");
	
	Для Каждого Реквизит Из РеквизитыТаблицы Цикл
		Колонка = Элементы.Добавить(Реквизит + ИмяСписка, Тип("ПолеФормы"), Элементы[ИмяСписка]);
		Колонка.Вид                    = ВидПоляФормы.ПолеНадписи;
		Колонка.ПутьКДанным            = ИмяСписка + "." + Реквизит;
		Колонка.АвтоМаксимальнаяВысота = Ложь;
		Колонка.АвтоВысотаЯчейки       = Истина;
		Колонка.Высота                 = 10;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СистемнаяТаблица) Тогда
		//@skip-check bsl-legacy-check-string-literal
		ЭлементОтбора = ЭтотОбъект["Список"].Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Предопределенный");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение   = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область РаботаСДанными

#Область Общие

&НаКлиенте
Процедура УдалитьОбъектПоКлючу()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(Элементы.Список.ТекущаяСтрока, "КлючЗаписи") > 0 Тогда
		УдалитьЗаписьНаСервере();
	Иначе
		ПометитьНаУдалениеСсылкуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СменитьРежимУдаленияОбъекта()
	
	Элементы.РежимОбмена.Пометка = Не Элементы.РежимОбмена.Пометка;
	РежимОбмена = Элементы.РежимОбмена.Пометка;
	
КонецПроцедуры

#КонецОбласти

#Область Частные

&НаСервере
Процедура УдалитьЗаписьНаСервере()
	
	КлючиЗаписи = Элементы.Список.ВыделенныеСтроки;
	
	Для Каждого КлючЗаписи Из КлючиЗаписи Цикл
		
		МетаданныеРегистра = КлючЗаписи.Метаданные();
		
		Если МетаданныеРегистра.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору Тогда
			СообщитьПользователю(НРег("ru = 'Регистр подчинен регистратору'"));
			Возврат;
		КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений[МетаданныеРегистра.Имя].СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, КлючЗаписи);
		МенеджерЗаписи.Прочитать();
		Если Не МенеджерЗаписи.Выбран() Тогда
			СообщитьПользователю(НРег("ru = 'Не удалось выбрать данные по записи'"));
			Возврат;
		КонецЕсли;
		
		МенеджерЗаписи.Удалить();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеСсылкуНаСервере()
	
	Ссылки = Элементы.Список.ВыделенныеСтроки;
	
	Для Каждого Ссылка Из Ссылки Цикл
		
		ОбъектДанных = Ссылка.ПолучитьОбъект();
		Если РежимОбмена Тогда
			ОбъектДанных.ОбменДанными.Загрузка = Истина;
		КонецЕсли;
		ОбъектДанных.УстановитьПометкуУдаления(Не ОбъектДанных.ПометкаУдаления);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти