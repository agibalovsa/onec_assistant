#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Порция = 10;
	ПолучитьМетаданныеПоРазделам();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяТаблицыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДанныеВыбора = Новый СписокЗначений;
	Для Каждого Строка Из МетаданныеПоРазделам Цикл
		ДанныеВыбора.Добавить(Строка.ИмяТаблицы);
	КонецЦикла;
	
	ОкончаниеВыбора = Новый ОписаниеОповещения("ОкончаниеВыбораИмяТаблицы", ЭтотОбъект);
	
	ПоказатьВыборИзСписка(ОкончаниеВыбора, ДанныеВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеТаблицыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда
		СообщитьПользователю(НСтр("ru = 'Не выбран регистр'"));
		Возврат;
	КонецЕсли;
	
	ДанныеВыбора = Новый СписокЗначений;
	Для Каждого Строка Из ПоляМетаданных Цикл
		ДанныеВыбора.Добавить(Строка.ПолеТаблицы);
	КонецЦикла;
	
	ОкончаниеВыбора = Новый ОписаниеОповещения("ОкончаниеВыбораПоляТаблицы", ЭтотОбъект);
	
	ПоказатьВыборИзСписка(ОкончаниеВыбора, ДанныеВыбора, Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Очистить(Команда)
	
	ОчиститьНаСервере();
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОкончаниеВыбораИмяТаблицы(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ИмяТаблицы = ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
	ПолучитьПоляМетаданных();
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВыбораПоляТаблицы(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ПолеТаблицы = ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьМетаданныеПоРазделам()
	
	МетаданныеПоРазделам.Очистить();
	
	МетаданныеПоРазделамМассив = ВладелецФормы.ПолучитьМетаданныеПоРазделам();
	
	Для Каждого Строка Из МетаданныеПоРазделамМассив Цикл
		НоваяСтрока = МетаданныеПоРазделам.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
	МетаданныеПоРазделам.Сортировать("ИмяМетаданных");
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПоляМетаданных()
	
	ПоляМетаданных.Очистить();
	
	Отбор = Новый Структура;
	Отбор.Вставить("ИмяТаблицы", ИмяТаблицы);
	
	НайденныеСтроки = МетаданныеПоРазделам.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыМетаданныхПоРазделу = ВладелецФормы.ПолучитьПоляМетаданныхПоРазделу(
		НайденныеСтроки[0].Раздел,
		НайденныеСтроки[0].ИмяМетаданных,
		Истина);
		
	Для Каждого Реквизит Из РеквизитыМетаданныхПоРазделу Цикл
		НоваяСтрока = ПоляМетаданных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизит);
	КонецЦикла;
	
	ПоляМетаданных.Сортировать("ПолеТаблицы");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНаСервере()
	
	ОтборТаблицы = Новый Структура;
	ОтборТаблицы.Вставить("ИмяТаблицы", ИмяТаблицы);
	
	НайденныеСтроки = МетаданныеПоРазделам.НайтиСтроки(ОтборТаблицы);
	
	ВладелецФормы.ПолучитьТаблицуБитыхСсылок(НайденныеСтроки[0].Раздел, ИмяТаблицы, ПолеТаблицы, Порция, Истина);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СообщитьПользователю(Текст)
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = Текст;
	СообщениеПользователю.Сообщить();
	
КонецПроцедуры

#КонецОбласти